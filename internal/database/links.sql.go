// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: links.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const getLink = `-- name: GetLink :one
SELECT hash, user_id, link, created_at FROM links
WHERE hash = $1 LIMIT 1
`

func (q *Queries) GetLink(ctx context.Context, hash string) (Link, error) {
	row := q.db.QueryRow(ctx, getLink, hash)
	var i Link
	err := row.Scan(
		&i.Hash,
		&i.UserID,
		&i.Link,
		&i.CreatedAt,
	)
	return i, err
}

const insertLink = `-- name: InsertLink :one
INSERT INTO links(hash, user_id, link)
VALUES ($1, $2, $3)
RETURNING hash, user_id, link, created_at
`

type InsertLinkParams struct {
	Hash   string
	UserID uuid.UUID
	Link   pgtype.Text
}

func (q *Queries) InsertLink(ctx context.Context, arg InsertLinkParams) (Link, error) {
	row := q.db.QueryRow(ctx, insertLink, arg.Hash, arg.UserID, arg.Link)
	var i Link
	err := row.Scan(
		&i.Hash,
		&i.UserID,
		&i.Link,
		&i.CreatedAt,
	)
	return i, err
}
